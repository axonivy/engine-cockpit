pipeline {
  agent any

  options {
    buildDiscarder(logRotator(numToKeepStr: '60', artifactNumToKeepStr: '5'))
  }

  triggers {
    cron '@midnight'
  }

  parameters {
    string(name: 'engineSource', defaultValue: 'https://product.ivyteam.io', description: 'Engine page url')
  }

  stages {
    stage('screenshot') {
      steps {
        script {
          def common = load 'build/build.groovy'
          common.buildIntegrationOnLinux("-Pengine -Pscreenshots ");
          archiveArtifacts '**/target/docu/**/*'
        }
      }
    }
    stage('verify') {
      steps {
        script {
          docker.build('maven', '-f build/Dockerfile .').inside() {
            maven cmd: "verify -f image-validation/pom.xml -ntp -Dmaven.test.skip=true " + 
                "-Dref.screenshot.build='${getScreenshotRefBranch()}' " + 
                "-Dimg.similarity=${getImageSimilarity()} " + 
                "-Pscreenshots-verify "
            archiveArtifacts '**/target/*.html'
            def common = load 'build/build.groovy'
            common.recordMavenIssues();
            currentBuild.description = "<a href=${BUILD_URL}artifact/engine-cockpit-selenium-test/target/newscreenshots.html>&raquo; Screenshots</a>"
          }
        }
      }
    }
  }
}

def getScreenshotRefBranch() {
  if (isReleasingBranch() && currentBuild.previousSuccessfulBuild != null) {
    return env.BRANCH_NAME.replace('/', '%252F')
  }
  return 'release%252F13.1'
}

def getImageSimilarity() {
  if (isReleasingBranch()) {
    return '97'
  }
  return '95'
}
