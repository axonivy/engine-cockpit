<html xmlns="http://www.w3.org/1999/xhtml" xmlns:f="http://xmlns.jcp.org/jsf/core" xmlns:h="http://xmlns.jcp.org/jsf/html"
  xmlns:ui="http://xmlns.jcp.org/jsf/facelets" xmlns:ic="http://ivyteam.ch/jsf/component" xmlns:p="http://primefaces.org/ui"
  xmlns:pe="http://primefaces.org/ui/extensions" xmlns:cc="http://java.sun.com/jsf/composite/composite">
<h:body>
  <f:metadata>
    <f:viewParam name="file" value="#{editorBean.selectedFile}" />
    <f:viewAction action="#{editorBean.onload}" />
  </f:metadata>

  <ui:composition template="../includes/template/template.xhtml">
    <ui:define name="breadcrumb">
      <li><span>System</span></li>
      <li>/</li>
      <li><a href="editor.xhtml">Config File Editor</a></li>
    </ui:define>

    <ui:define name="topbar-items">
      <cc:TopBarItem href="#{advisorBean.cockpitEngineGuideUrl}" />
    </ui:define>

    <ui:define name="content">
      <div class="card">
        <p:growl id="editorMessage" for="editorMessage" showDetail="true">
          <p:autoUpdate />
        </p:growl>
        <div class="p-d-flex p-ai-center p-mb-3">
          <i class="p-pr-3 si si-common-file-text-edit card-title-icon"></i>
          <h2 class="p-m-0">Config File Editor</h2>

          <h:form id="fileChooserForm" styleClass="p-ml-auto">
            <div class="field col-12 md:col-4">
              <p:autoComplete id="fileDropDown" dropdown="true" value="#{editorBean.activeConfigFile}"
                var="file" itemLabel="#{file.fileName}" itemValue="#{file}" converter="editorFileConverter"
                completeMethod="#{editorBean.completeFiles}" groupBy="#{file.provider}">
                <p:ajax event="itemSelect" update="editorFormContainer, uploadDownloadBinaryFilesContainer, currentFileContainer"
                  oncomplete="handleAutocompleteSelection()" />
              </p:autoComplete>
            </div>
          </h:form>
        </div>

        <script>
          function handleAutocompleteSelection() {
            var selectedValue = document.getElementById('fileChooserForm:fileDropDown_input').value
            if (selectedValue == null || selectedValue == "") {
              selectedValue = document.getElementById('currentFile').innerHTML;
            }
            var currentURL = window.location.href;
            var queryParam = "file=" + encodeURIComponent(selectedValue);
            if (currentURL.indexOf("?") !== -1) {
              currentURL = currentURL.split("?")[0];
            }
            var newURL = currentURL + "?" + queryParam;
            window.history.replaceState(null, null, newURL);
            
            loadFile();
          }
        </script>
        <h:panelGroup id="currentFileContainer">
          <h:panelGroup id="currentFile" styleClass="p-my-2" layout="block" rendered="#{editorBean.activeConfigFile != null}">
            <p:staticMessage rendered="#{editorBean.activeConfigFile.readOnly}"
               summary="This file is read only!" severity="warn" />
            <b id="currentFile">#{editorBean.activeConfigFile.path}</b>
          </h:panelGroup>
        </h:panelGroup>
        
        <h:panelGroup id="uploadDownloadBinaryFilesContainer" >
          <h:form id="uploadDownloadBinary" rendered="#{editorBean.isBinary()}">
            <p:messages id="messages" showDetail="true" closable="true" />
            <p:fileUpload id="binaryUpload" mode="simple"
                skinSimple="true" multiple="false" auto="true"
                listener="#{editorBean.upload}"
                update="uploadDownloadBinary"
                style="display: none;" />
              <p:commandButton title="Upload .p12" value="Upload .p12" 
                icon="si si-upload-bottom"
                type="button" id="uploadbtn"
                styleClass="ui-button-outlined"
                onclick="document.getElementById(this.id.replace(':uploadbtn',':binaryUpload_input')).click(); return false;">
              </p:commandButton>
              <p:commandButton title="Download .p12" id="binaryDownload"
                actionListener="#{editorBean.fileDownloadView()}"
                value="Download .p12" ajax="false"
                icon="si si-download-bottom" styleClass="ui-button-outlined">
                <p:fileDownload value="#{editorBean.file}" />
              </p:commandButton>
              <p:tooltip for="binaryDownload" value="#{editorBean.name} #{editorBean.size} Bytes" />
          </h:form>
        </h:panelGroup>
        
        <h:panelGroup id="editorFormContainer" >
          <h:form id="editorForm" styleClass="editor-card" rendered="#{!editorBean.isBinary()}">
            <script>
              function waitFor(resolver) {
                const poll = resolve => {
                  var instance = resolver();
                  if(instance != undefined) {
                    resolve(instance);
                  } else {
                    setTimeout(() => poll(resolve), 10);
                  }
                }
                return new Promise(poll);
              }
            
              function monaco() {
                return document.getElementById("framedEditor").contentWindow.codeEditor?._modelData.model;
              }
              
              function code() {
                return document.getElementById("editorForm:codeHolder");
              }
              
              function setTheme(theme) {
                document.getElementById("framedEditor").contentWindow.MonacoEnvironment.setTheme(theme)
              }
              
              function loadFile() {
                var file = new URLSearchParams(window.parent.location.search).get("file"); 
                var ext = file.slice(file.lastIndexOf('.')+1)
                
                waitFor(() => monaco()).then(model => {
                  setTheme("#{ivyFreyaTheme.mode}");
                  model.setValue(code().value);
                  model.setLanguage(ext);
                })
              }
              
              function saveEditor() {
                code().innerHTML = monaco().getValue();
              }
              
              window.onload = function(){ 
                loadFile(); 
                document.body.addEventListener('change-theme-mode', event => setTheme(event.detail.mode)) 
              };
            </script>
            <iframe id="framedEditor" src="#{resource['monaco-yaml-ivy/index.html']}&amp;demo=off&amp;theme=#{ivyFreyaTheme.mode}" 
            style="border: 0; width: 100%; height: 100%"/>
            <h:inputTextarea id="codeHolder" value="#{editorBean.activeConfigFile.content}" escape="false" style="display:none" /> <!-- contains configfiles to be edited -->
            <p:staticMessage severity="warn" rendered="#{editorBean.activeConfigFile.migrated}" 
              detail="These file contents were auto-migrated to the latest version." />
    
            <div class="p-d-flex p-flex-wrap">
              <p:commandButton id="cancelEditor" onclick="window.location.reload(true)" value="Cancel" type="button"
                styleClass="p-ml-auto ui-button-secondary ui-button-flat" disabled="#{editorBean.activeConfigFile == null}" />
              <p:commandButton id="saveEditor" styleClass="p-ml-1" value="Save" disabled="#{!editorBean.canSave()}"
                icon="si si-floppy-disk" onclick="saveEditor()" actionListener="#{editorBean.activeConfigFile.save()}" widgetVar="saveEditor" />
            </div>
          </h:form>
        </h:panelGroup>
        </div>
    </ui:define>
  </ui:composition>
</h:body>

</html>
