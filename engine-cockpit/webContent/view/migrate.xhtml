<html xmlns="http://www.w3.org/1999/xhtml"
  xmlns:f="http://xmlns.jcp.org/jsf/core"
  xmlns:h="http://xmlns.jcp.org/jsf/html"
  xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
  xmlns:ic="http://ivyteam.ch/jsf/component"
  xmlns:p="http://primefaces.org/ui"
  xmlns:pe="http://primefaces.org/ui/extensions"
  xmlns:cc="http://xmlns.jcp.org/jsf/composite/composite">
<h:body>
  <ui:composition template="../includes/template/wizard.xhtml">

    <ui:define name="content">
      <h:outputStylesheet name="resources/css/diff2html.css" />
      <h:outputScript name="resources/js/diff2html.min.js" />      
      <script>
      var diffOptions = {
        drawFileList: false,
        matching: 'words',
        outputFormat: 'side-by-side',
      }
      function showDiff(id, patch) {
        var diffHtml = Diff2Html.html(patch, diffOptions);
        document.getElementById(id).innerHTML = diffHtml;
      }
      </script>
      
      <div class="col card ui-fluid">
        <p:growl id="migrateGrowl" for="migrateGrowl" showDetail="true">
          <p:autoUpdate />
        </p:growl>
        <div class="flex align-items-center mb-3">
          <i class="pr-3 si si-navigation-right-circle card-title-icon"></i>
          <h2 class="m-0">Migrate old Axon Ivy Engine</h2>
          <p:linkButton href="#{advisorBean.engineGuideBaseUrl}/reference/migration-wizard.html" target="_blank" rel="noopener noreferrer"
            styleClass="ml-auto ui-button-outlined rounded-button" icon="si si-question-circle" />
        </div>

        <h:form id="locationForm">
          <p:panel style="margin-bottom:10px;">
            <p:panelGrid columns="3" layout="flex"
              contentStyleClass="align-items-center"
              columnClasses="col-12 md:col-3 lg:col-3, col-12 md:col-6 lg:col-6, col-12 md:col-3 lg:col-3">
              <p:outputLabel for="oldEngineInput"
                value="Location of old Engine" />
              <h:panelGroup styleClass="md-inputfield">
                <p:inputText id="oldEngineInput"
                  requiredMessage="Value is required"
                  value="#{migrationBean.pathToOldEngine}"
                  required="true" />
                <p:message for="oldEngineInput"
                  id="oldEngineInputMessage" />
              </h:panelGroup>

              <p:commandButton icon="si si-heavy-equipment-hook"
                value="Load Location" id="checkLocation"
                disabled="#{migrationBean.state == 'RUNNING'}"
                actionListener="#{migrationBean.checkOldEngineLocation}"
                validateClient="true" update="@form, migrationChecksForm, licenceUploadForm, migrationInPlaceForm, migration" />
            </p:panelGrid>
            <f:facet name="header">
              Location
            </f:facet>
          </p:panel>
        </h:form>

        <h:form id="migrationChecksForm">
          <p:panel id="migrationChecks" style="margin-bottom:10px;"
            rendered="#{migrationBean.result != null}">
            <ui:repeat var="check"
              value="#{migrationBean.result.checks()}">
              <div>
                <i style="position: relative; top: 2px;"
                  class="#{check.success() ? 'si si-check-circle-1 state-active' : 'si si-delete-1 state-inactive'}"></i>
                <h:outputText value=" #{check.message()}" />
                <h:panelGroup rendered="#{not empty check.error()}">
                  <pre style="white-space: pre-wrap; word-break: break-all;"><code><h:outputText value="#{check.error()}" /></code></pre>
                </h:panelGroup>
              </div>
              <p:divider
                rendered="#{migrationBean.isNotLastCheck(check)}" />
            </ui:repeat>
            <f:facet name="header">
              Checks
            </f:facet>
          </p:panel>
        </h:form>

        <h:form id="licenceUploadForm" enctype="multipart/form-data">
          <p:panel style="margin-bottom:10px;" rendered="#{migrationBean.licenceCheck()}">
            <p:messages id="messages">
              <p:autoUpdate />
            </p:messages>

            <h:panelGroup rendered="#{migrationBean.validLicence}">
              <p:staticMessage severity="info" detail="Valid licence found." />
              <pre><code><h:outputText value="#{migrationBean.licence}" /></code></pre>
            </h:panelGroup>
 
            <h:panelGroup rendered="#{!migrationBean.validLicence}">
              <p:staticMessage severity="warn" detail="Licence is not valid. Please upload a new licence otherwise you can not start the Axon Ivy Engine after migration. Reason: #{migrationBean.invalidLicenceMessage}" />
              <div class="file-upload" style="margin-top:10px;">
                <p:fileUpload id="licenceUpload"
                  mode="simple" skinSimple="true" auto="true"
                  listener="#{migrationBean.handleUploadLicence}"
                  update="licenceUploadForm"
                  value="#{migrationBean.uploadedLicenceFile}" />
              </div>
            </h:panelGroup>

            <f:facet name="header">
                Licence
            </f:facet>
          </p:panel>
        </h:form>

        <h:form id="migrationInPlaceForm">
          <p:panel id="migrationInPlace" rendered="#{migrationBean.inPlace}">
            <h:panelGroup id="migrationInPlaceInfo" layout="block">
                This migration is an in place migration.
                Therefore, the new Axon Ivy Engine will be installed in exactly the same place as the old Axon Ivy Engine.
                The configuration files in container environments, such as the <code>ivy.yaml</code>, may are provided in a read-only mode.
                As the migration needs to operate with write access onto these configuration files, you can define whether a temporary directory should be used to perform these changes.
                After the migration, you must manually add these files to the Axon Ivy Engine.
            </h:panelGroup>

            <h:panelGroup id="migrationInWriteToTmp" layout="block" style="margin-top:10px;">
              <p:selectBooleanCheckbox id="migrationTmpDir" value="#{migrationBean.writeToTmp}" itemLabel="Write configuration files to temporary directory">
                <p:ajax event="change" update="migrationInPlace" />
              </p:selectBooleanCheckbox>
            </h:panelGroup>

            <h:panelGroup id="migrationInWriteToTmpDir" layout="block" style="margin-top:10px;">
              <h:outputText value="Temporary Directory: " />
              <code>#{migrationBean.configurationTmpDir}</code>
            </h:panelGroup>

            <f:facet name="header">
              In-Place Migration
            </f:facet>
          </p:panel>
        </h:form>

        <h:panelGroup layout="block" id="migration" style="margin-top:20px;">
          <h:form id="form"
            rendered="#{migrationBean.result != null and migrationBean.result.success()}">
            <p:panelGrid columns="2" layout="flex"
              columnClasses="col-12 md:col-9 lg:col-9, col-12 md:col-3 lg:col-3">
              <h3>Migration Tasks</h3>

              <h:panelGroup id="migrationButtons" layout="block">
                <p:commandButton id="startMigration"
                  icon="si si-controls-play" value="Start"
                  actionListener="#{migrationBean.execute}"
                  update="migration locationForm"
                  onsuccess="PF('migrationPoller').start()"
                  rendered="#{migrationBean.state == 'START'}" />
                <p:commandButton id="finishMigration"
                  icon="si si-check-1" value="Finish"
                  rendered="#{migrationBean.state == 'FINISHED'}"
                  type="button"
                  onclick="PF('finishWizardModel').show();" />
                <p:commandButton id="migrationRunning"
                  icon="si si-button-refresh-arrows si-is-spinning"
                  value="Running" disabled="true"
                  rendered="#{migrationBean.state == 'RUNNING'}" />
                <p:poll interval="1"
                  autoStart="#{migrationBean.state == 'RUNNING'}"
                  update="migrationButtons @(.task-icon) migrationMessage"
                  widgetVar="migrationPoller" />
              </h:panelGroup>
            </p:panelGrid>

            <p:messages id="migrationMessage" for="migrationMessage"
              showDetail="true" skipDetailIfEqualsSummary="true">
              <p:autoUpdate />
            </p:messages>

            <p:dataTable var="task" value="#{migrationBean.tasks}"
              id="taskTable" rowKey="#{task.name}">
              <p:column style="width:1rem">
                <h:panelGroup id="taskState" styleClass="task-icon">
                  <i class="mr-0 si si-#{task.stateIcon} link-icon"></i>
                </h:panelGroup>
              </p:column>

              <p:column>
                <b><h:outputText value="#{task.name}" /></b>
              </p:column>

              <p:column style="width:2rem">
                <p:rowToggler />
              </p:column>

              <p:rowExpansion>
                <p class="m-0">
                  <h:panelGroup rendered="#{not empty task.description}">
                    <h:outputText value="#{task.description}"
                      escape="false" />
                  </h:panelGroup>
                  <h:panelGroup rendered="#{not empty task.script}">
                    <pre style="white-space: pre-wrap;"><code><h:outputText value="#{task.script}" /></code></pre>
                  </h:panelGroup>
                </p>
              </p:rowExpansion>
            </p:dataTable>
          </h:form>
        </h:panelGroup>
      </div>
      
      <p:dialog style="min-width: 300px;" header="Finish Migration Wizard" id="finishWizardModel"
        widgetVar="finishWizardModel" modal="true" responsive="true" closeOnEscape="true">
        <h:form id="finishWizardForm" styleClass="custom-dialog-form">
          <div>  
            <p:staticMessage severity="info" summary="Success" detail="To complete the migration, perform the follwing steps:" />
            <ol>
              <li>Restart your engine.</li>
            </ol>
            <br />
          </div>
          <div class="custom-dialog-footer">
            <p:commandButton id="finishWizardNo" onclick="PF('finishWizardModel').hide();" value="Cancel" type="button"
              styleClass="ui-button-secondary ui-button-flat modal-input-button" />
            <p:commandButton id="finishWizardYes" oncomplete="window.location = '/'" value="OK" icon="si si-check-1" 
              styleClass="modal-input-button" rendered="#{not restartBean.restartable}"/>
            <p:commandButton id="finishWizardRestart" onclick="var button=this; buttonAddSpinner(button);" oncomplete="redirectToHomeAfterRestart()" 
              value="Restart" icon="si si-power-button" styleClass="modal-input-button" actionListener="#{restartBean.restart}" 
              rendered="#{restartBean.restartable}"/>
          </div>
        </h:form>
      </p:dialog>
      
    </ui:define>
  </ui:composition>
</h:body>
</html>
